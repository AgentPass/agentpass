services:
  postgres:
    image: postgres:15
    container_name: agentbridge-postgres
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-agentbridge}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-agentbridge_password}
      POSTGRES_DB: ${POSTGRES_DB:-agentbridge}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-agentbridge} -d ${POSTGRES_DB:-agentbridge}"]
      interval: 10s
      timeout: 5s
      retries: 5

  agentbridge-be:
    profiles: ["be"]
    develop:
      watch:
        - action: sync
          path: apps/agentbridge-be/
          target: /app
          ignore:
            - node_modules/
        - action: rebuild
          path: apps/agentbridge-be/package.json
    build:
      context: ../..
      dockerfile: apps/agentbridge-be/Dockerfile
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${POSTGRES_DB}
      - AWS_SHARED_CREDENTIALS_FILE=/root/.aws/credentials
      - AWS_CONFIG_FILE=/root/.aws/config
    volumes:
      - ~/.aws:/root/.aws:ro
    ports:
      - "${PORT:-3333}:3333"
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
